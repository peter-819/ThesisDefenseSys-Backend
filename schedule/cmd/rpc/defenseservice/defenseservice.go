// Code generated by goctl. DO NOT EDIT!
// Source: defense.proto

package defenseservice

import (
	"context"

	"TDS-backend/schedule/cmd/rpc/types/defense"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Defense               = defense.Defense
	EmptyRequest          = defense.EmptyRequest
	Member                = defense.Member
	QueryAllDefensesReply = defense.QueryAllDefensesReply
	Student               = defense.Student

	DefenseService interface {
		QueryAllDefenses(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*QueryAllDefensesReply, error)
	}

	defaultDefenseService struct {
		cli zrpc.Client
	}
)

func NewDefenseService(cli zrpc.Client) DefenseService {
	return &defaultDefenseService{
		cli: cli,
	}
}

func (m *defaultDefenseService) QueryAllDefenses(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*QueryAllDefensesReply, error) {
	client := defense.NewDefenseServiceClient(m.cli.Conn())
	return client.QueryAllDefenses(ctx, in, opts...)
}
