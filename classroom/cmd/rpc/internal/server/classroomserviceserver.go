// Code generated by goctl. DO NOT EDIT!
// Source: classroom.proto

package server

import (
	"context"

	"TDS-backend/classroom/cmd/rpc/internal/logic"
	"TDS-backend/classroom/cmd/rpc/internal/svc"
	"TDS-backend/classroom/cmd/rpc/types/classroom"
)

type ClassroomServiceServer struct {
	svcCtx *svc.ServiceContext
	classroom.UnimplementedClassroomServiceServer
}

func NewClassroomServiceServer(svcCtx *svc.ServiceContext) *ClassroomServiceServer {
	return &ClassroomServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ClassroomServiceServer) QueryAllClassrooms(ctx context.Context, in *classroom.EmptyRequest) (*classroom.QueryClassroomsResponse, error) {
	l := logic.NewQueryAllClassroomsLogic(ctx, s.svcCtx)
	return l.QueryAllClassrooms(in)
}

func (s *ClassroomServiceServer) QueryClassroom(ctx context.Context, in *classroom.QueryClassroomRequest) (*classroom.Classroom, error) {
	l := logic.NewQueryClassroomLogic(ctx, s.svcCtx)
	return l.QueryClassroom(in)
}

func (s *ClassroomServiceServer) QueryAvailableByTime(ctx context.Context, in *classroom.QueryByTimeRequest) (*classroom.QueryClassroomsResponse, error) {
	l := logic.NewQueryAvailableByTimeLogic(ctx, s.svcCtx)
	return l.QueryAvailableByTime(in)
}

func (s *ClassroomServiceServer) RemoveClassroom(ctx context.Context, in *classroom.RemoveClassroomRequest) (*classroom.EmptyResponse, error) {
	l := logic.NewRemoveClassroomLogic(ctx, s.svcCtx)
	return l.RemoveClassroom(in)
}
