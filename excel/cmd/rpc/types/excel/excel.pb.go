// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: excel.proto

package excel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExcelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cols   []int32 `protobuf:"varint,1,rep,packed,name=cols,proto3" json:"cols,omitempty"`
	RowMin int32   `protobuf:"varint,2,opt,name=row_min,json=rowMin,proto3" json:"row_min,omitempty"`
	RowMax int32   `protobuf:"varint,3,opt,name=row_max,json=rowMax,proto3" json:"row_max,omitempty"`
}

func (x *ExcelInfo) Reset() {
	*x = ExcelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelInfo) ProtoMessage() {}

func (x *ExcelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelInfo.ProtoReflect.Descriptor instead.
func (*ExcelInfo) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{0}
}

func (x *ExcelInfo) GetCols() []int32 {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *ExcelInfo) GetRowMin() int32 {
	if x != nil {
		return x.RowMin
	}
	return 0
}

func (x *ExcelInfo) GetRowMax() int32 {
	if x != nil {
		return x.RowMax
	}
	return 0
}

type ExcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ExcelInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	File []byte     `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *ExcelRequest) Reset() {
	*x = ExcelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelRequest) ProtoMessage() {}

func (x *ExcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelRequest.ProtoReflect.Descriptor instead.
func (*ExcelRequest) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{1}
}

func (x *ExcelRequest) GetInfo() *ExcelInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ExcelRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type RowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []string `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *RowInfo) Reset() {
	*x = RowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowInfo) ProtoMessage() {}

func (x *RowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowInfo.ProtoReflect.Descriptor instead.
func (*RowInfo) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{2}
}

func (x *RowInfo) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

type ExcelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*RowInfo `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ExcelResponse) Reset() {
	*x = ExcelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelResponse) ProtoMessage() {}

func (x *ExcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelResponse.ProtoReflect.Descriptor instead.
func (*ExcelResponse) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{3}
}

func (x *ExcelResponse) GetRows() []*RowInfo {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_excel_proto protoreflect.FileDescriptor

var file_excel_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65,
	0x78, 0x63, 0x65, 0x6c, 0x22, 0x51, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x6f, 0x77, 0x4d, 0x61, 0x78, 0x22, 0x48, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e, 0x45, 0x78,
	0x63, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x25, 0x0a, 0x07, 0x52, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e,
	0x52, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x32, 0x41, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x73, 0x65, 0x45, 0x78,
	0x63, 0x65, 0x6c, 0x12, 0x13, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e, 0x45, 0x78, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x6c,
	0x2e, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_excel_proto_rawDescOnce sync.Once
	file_excel_proto_rawDescData = file_excel_proto_rawDesc
)

func file_excel_proto_rawDescGZIP() []byte {
	file_excel_proto_rawDescOnce.Do(func() {
		file_excel_proto_rawDescData = protoimpl.X.CompressGZIP(file_excel_proto_rawDescData)
	})
	return file_excel_proto_rawDescData
}

var file_excel_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_excel_proto_goTypes = []interface{}{
	(*ExcelInfo)(nil),     // 0: excel.ExcelInfo
	(*ExcelRequest)(nil),  // 1: excel.ExcelRequest
	(*RowInfo)(nil),       // 2: excel.RowInfo
	(*ExcelResponse)(nil), // 3: excel.ExcelResponse
}
var file_excel_proto_depIdxs = []int32{
	0, // 0: excel.ExcelRequest.info:type_name -> excel.ExcelInfo
	2, // 1: excel.ExcelResponse.rows:type_name -> excel.RowInfo
	1, // 2: excel.User.ParseExcel:input_type -> excel.ExcelRequest
	3, // 3: excel.User.ParseExcel:output_type -> excel.ExcelResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_excel_proto_init() }
func file_excel_proto_init() {
	if File_excel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_excel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_excel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_excel_proto_goTypes,
		DependencyIndexes: file_excel_proto_depIdxs,
		MessageInfos:      file_excel_proto_msgTypes,
	}.Build()
	File_excel_proto = out.File
	file_excel_proto_rawDesc = nil
	file_excel_proto_goTypes = nil
	file_excel_proto_depIdxs = nil
}
