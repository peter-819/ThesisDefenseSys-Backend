// Code generated by goctl. DO NOT EDIT!
// Source: student.proto

package studentservice

import (
	"context"

	"TDS-backend/student/cmd/rpc/types/student"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddStudentRequest         = student.AddStudentRequest
	EmptyRequest              = student.EmptyRequest
	EmptyResponse             = student.EmptyResponse
	ModifyStudentRequest      = student.ModifyStudentRequest
	QueryStudentRequest       = student.QueryStudentRequest
	QueryStudentResponse      = student.QueryStudentResponse
	QueryStudentsBatchRequest = student.QueryStudentsBatchRequest
	QueryStudentsResponse     = student.QueryStudentsResponse
	RemoveStudentRequest      = student.RemoveStudentRequest
	Student                   = student.Student

	StudentService interface {
		AddStudent(ctx context.Context, in *AddStudentRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		RemoveStudent(ctx context.Context, in *RemoveStudentRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		ModifyStudent(ctx context.Context, in *ModifyStudentRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
		QueryAllStudents(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*QueryStudentsResponse, error)
		QueryStudent(ctx context.Context, in *QueryStudentRequest, opts ...grpc.CallOption) (*QueryStudentResponse, error)
		QueryNondefensedStudents(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*QueryStudentsResponse, error)
		QueryStudentsBatch(ctx context.Context, in *QueryStudentsBatchRequest, opts ...grpc.CallOption) (*QueryStudentsResponse, error)
	}

	defaultStudentService struct {
		cli zrpc.Client
	}
)

func NewStudentService(cli zrpc.Client) StudentService {
	return &defaultStudentService{
		cli: cli,
	}
}

func (m *defaultStudentService) AddStudent(ctx context.Context, in *AddStudentRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.AddStudent(ctx, in, opts...)
}

func (m *defaultStudentService) RemoveStudent(ctx context.Context, in *RemoveStudentRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.RemoveStudent(ctx, in, opts...)
}

func (m *defaultStudentService) ModifyStudent(ctx context.Context, in *ModifyStudentRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.ModifyStudent(ctx, in, opts...)
}

func (m *defaultStudentService) QueryAllStudents(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*QueryStudentsResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.QueryAllStudents(ctx, in, opts...)
}

func (m *defaultStudentService) QueryStudent(ctx context.Context, in *QueryStudentRequest, opts ...grpc.CallOption) (*QueryStudentResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.QueryStudent(ctx, in, opts...)
}

func (m *defaultStudentService) QueryNondefensedStudents(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*QueryStudentsResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.QueryNondefensedStudents(ctx, in, opts...)
}

func (m *defaultStudentService) QueryStudentsBatch(ctx context.Context, in *QueryStudentsBatchRequest, opts ...grpc.CallOption) (*QueryStudentsResponse, error) {
	client := student.NewStudentServiceClient(m.cli.Conn())
	return client.QueryStudentsBatch(ctx, in, opts...)
}
